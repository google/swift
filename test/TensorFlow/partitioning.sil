// RUN: %target-sil-opt -tf-partition %s -o /dev/null | %FileCheck %s


import Builtin
import Swift
struct TensorCore<Element> {}

sil @_T018__tfop_Const__dc__Sf_Tg5 : $@convention(thin) (Swift.Float) -> @owned TensorCore<Swift.Float>
sil @_T016__tfop_Add__tt__Sf_Tg5Tf4gg_n : $@convention(thin) (@guaranteed TensorCore<Swift.Float>, @guaranteed TensorCore<Swift.Float>) -> @owned TensorCore<Swift.Float>

// Test that a single constant can be partitioned out, the most basic
// case possible.

// CHECK-LABEL: --- TFPartition Host Result: simple_test
// CHECK-NOT: = apply
// CHECK:   builtin "tensorFlow_start"() : $()
// CHECK-NEXT: builtin "tensorFlow_done"() : $TensorCore<Float>
// CHECK-NOT: = apply
// CHECK-LABEL: -- TFPartition Accelerator Result: simple_test
// CHECK: bb0:
// CHECK-NEXT: %0 = float_literal $Builtin.FPIEEE32, 0x3F800000 // 1
// CHECK-NEXT: %1 = builtin "__tfop_Const__dc__"(%0 : $Builtin.FPIEEE32) : $TensorCore<Float>
// CHECK-NEXT: return %1 : $TensorCore<Float>
sil @simple_test : $@convention(thin) () -> TensorCore<Swift.Float> {
bb0:
  %0 = float_literal $Builtin.FPIEEE32, 0x3F800000 // 1.0
  %1 = struct $Swift.Float (%0 : $Builtin.FPIEEE32)
  debug_value %1 : $Swift.Float, let, name "value", argno 1 // id: %2
  %4 = function_ref @_T018__tfop_Const__dc__Sf_Tg5 : $@convention(thin) (Swift.Float) -> @owned TensorCore<Swift.Float>
  %5 = apply %4(%1) : $@convention(thin) (Swift.Float) -> @owned TensorCore<Swift.Float>

  return %5 : $TensorCore<Swift.Float>
}

